## This section it's to check if Countries Container alread exists
## In here, it will execute a bash command to check.
## If I use a docker_container command, it will create the container.
## And I used the grep because the return code. In docker ps --filter, it return 0 always.
- name: Checking docker container {{ services.countries.container_name }}
  shell: docker ps --format "{{'{{'}}.Names}}" | grep -i {{ services.countries.container_name }}{{ item }}
  with_sequence: count={{ services.countries.total_instances }}
  ignore_errors: true
  register: countries_container
  changed_when: false

## Now the ansible will try to find any command has return code not equals to 0.
- set_fact:
    create_countries_container: " {{ item | regex_replace('.*-i ') }}"
  loop: "{{ countries_container | json_query(search_query) }}"
  vars:
    search_query: "results[?rc!=`0`].cmd"

## Will print the container name as missing.
- debug: msg="The container {{ create_countries_container }} is missing."
  when: create_countries_container is defined

## This section it's to check if Airports Container alread exists
## In here, it will execute a bash command to check.
## If I use a docker_container command, it will create the container.
## And I used the grep because the return code. In docker ps --filter, it return 0 always.
- name: Checking docker container {{ services.airports.container_name }}
  shell: docker ps --format "{{'{{'}}.Names}}" | grep -i {{ services.airports.container_name }}{{ item }}
  with_sequence: count={{ services.airports.total_instances }}
  ignore_errors: true
  register: airports_container
  changed_when: false

## Now the ansible will try to find any command has return code not equals to 0.
- set_fact:
    create_airports_container: " {{ item | regex_replace('.*-i ') }}"
  loop: "{{ airports_container | json_query(search_query) }}"
  vars:
    search_query: "results[?rc!=`0`].cmd"

## Will print the container name as missing.
- debug: msg="The container {{ create_airports_container }} is missing."
  when: create_airports_container is defined

## This section it's to check if Caddy Container alread exists
## In here, it will execute a bash command to check.
## If I use a docker_container command, it will create the container.
## And I used the grep because the return code. In docker ps --filter, it return 0 always.
- name: Checking docker container {{ services.caddy.container_name }}
  shell: docker ps --format "{{'{{'}}.Names}}" | grep -i {{ services.caddy.container_name }}{{ item }}
  with_sequence: count={{ services.caddy.total_instances }}
  ignore_errors: true
  register: caddy_container
  changed_when: false

## Now the ansible will try to find any command has return code not equals to 0.
- set_fact:
    create_caddy_container: " {{ item | regex_replace('.*-i ') }}"
  loop: "{{ caddy_container | json_query(search_query) }}"
  vars:
    search_query: "results[?rc!=`0`].cmd"

## Will print the container name as missing.
- debug: msg="The container {{ create_caddy_container }} is missing."
  when: create_caddy_container is defined
